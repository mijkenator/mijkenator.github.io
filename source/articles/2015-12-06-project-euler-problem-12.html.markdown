---
title: Project Euler Problem 12
date: 2015-12-06 01:00 UTC
tags: project euler, erlang, python
layout: post
---

<b>Highly divisible triangular number</b>

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:<br>
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...<br>
Let us list the factors of the first seven triangle numbers:
<pre>
1: 1
3: 1,3
6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
</pre>
We can see that 28 is the first triangle number to have over five divisors.<br>
What is the value of the first triangle number to have over five hundred divisors?<br>
[Link to original description](https://projecteuler.net/problem=12)<br/>
[Source code examples on Github](https://github.com/mijkenator/pr_euler/tree/master/p12)<br>
[Some information how to find number of factors](http://mathforum.org/library/drmath/view/57151.html) because brute force implementation will be super slow.<br>
[How to generate prime numbers.Sieve of Eratosthenes](https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)

## Erlang version
```erlang
#!/usr/bin/env escript
%% -*- erlang -*-
%%! -smp enable -sname p9 -pz ./ -prime
% vim:syn=erlang

-mode(compile).

main(_) ->
    io:format("Answer: ~p ~n", [triangle(1,prime(500))]).


triangle(N, L) ->
    M = N * (N+1) div 2,
    case nod(M, L, []) of
        P when P =< 500 -> triangle(N+1, L);
        _               -> M
    end.

nod(_, [], D) -> lists:foldl(fun(E,A)-> A*(E+1) end,1,D);
nod(M, [H|T], D) when H =< M ->
    case dp(M,H,0) of
        0 -> nod(M, T, D);
        C -> nod(M, T, [C|D])
    end;
nod(_, _, D) -> lists:foldl(fun(E,A)-> A*(E+1) end,1,D).

dp(M,H,A) when H =< M, M rem H =:= 0 -> dp(M div H, H, A+1);
dp(_,_,A)                            -> A.

%------------------------------------- prime library from problem 10 

prime(N) ->    
    ets:new(comp, [public, named_table, {write_concurrency, true} ]),
    ets:new(prim, [public, named_table, {write_concurrency, true}]),
    composite_mc(N),
    primes_mc(N),
    lists:sort([X||{X,_}<- ets:tab2list(prim)]).

primes_mc(N) ->
    case erlang:system_info(schedulers) of
        1 -> primes(N);
        C -> launch_primes(lists:seq(1,C), C, N, N div C)
    end.
launch_primes([1|T], C, N, R) -> P = self(), spawn(fun()-> primes(2,R), P ! {ok, prm} end), launch_primes(T, C, N, R);
launch_primes([H|[]], C, N, R)-> P = self(), spawn(fun()-> primes(R*(H-1)+1,N), P ! {ok, prm} end), wait_primes(C);
launch_primes([H|T], C, N, R) -> P = self(), spawn(fun()-> primes(R*(H-1)+1,R*H), P ! {ok, prm} end), launch_primes(T, C, N, R).

wait_primes(0) -> ok;
wait_primes(C) ->
    receive
        {ok, prm} -> wait_primes(C-1)
    after 1000    -> wait_primes(C)
    end.

primes(N) -> primes(2, N).
primes(I,N) when I =< N ->
    case ets:lookup(comp, I) of
        [] -> ets:insert(prim, {I,1})
        ;_ -> ok
    end,
    primes(I+1, N);
primes(I,N) when I > N -> ok.


composite_mc(N) -> composite_mc(N,2,round(math:sqrt(N)),erlang:system_info(schedulers)).
composite_mc(N,I,M,C) when I =< M, C > 0 ->
    C1 = case ets:lookup(comp, I) of
        [] -> comp_i_mc(I*I, I, N), C-1
        ;_ -> C
    end,
    composite_mc(N,I+1,M,C1);
composite_mc(_,I,M,_) when I > M -> ok;
composite_mc(N,I,M,0) ->
    receive
        {ok, cim} -> composite_mc(N,I,M,1)
    after 1000    -> composite_mc(N,I,M,0)
    end.

comp_i_mc(J, I, N) -> 
    Parent = self(),
    spawn(fun() ->
        comp_i(J, I, N),
        Parent ! {ok, cim}
    end).

comp_i(J, I, N) when J =< N -> ets:insert(comp, {J, 1}), comp_i(J+I, I, N);
comp_i(J, _, N) when J > N -> ok.



```


## Python version
```python
#!/usr/bin/python

import prime

for i in xrange(1, 1000000000):
    n = i * (i+1) / 2
    if prime.num_factors(n) > 500:
        print n
        break

```

## Performance
```bash
mkh@mkh-xps:~/work/mblog/pr_euler/p12$ time ./p12.erl
Answer: 76576500

real    0m0.534s
user    0m0.515s
sys     0m0.076s
mkh@mkh-xps:~/work/mblog/pr_euler/p12$ time ./p12.py
76576500

real    0m0.996s
user    0m0.996s
sys     0m0.000s
mkh@mkh-xps:~/work/mblog/pr_euler/p12$
```

<div id="disqus_thread"></div>
<script>
/**
* RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
* LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
*/
/*
var disqus_config = function () {
    this.page.url = '2015/12/06/project-euler-problem-12/'; // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = 'pep12'; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');

s.src = '//mijkenator.disqus.com/embed.js';

s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>

