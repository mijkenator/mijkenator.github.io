---
title: Project Euler Problem 8
date: 2015-11-24 21:14 UTC
tags: project euler, erlang, python
layout: post
---

<b>Largest product in a series</b>

The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.<br>
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
<br><br>
Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?</br>
[Link to original description](https://projecteuler.net/problem=8)<br/>
[Source code examples on Github](https://github.com/mijkenator/pr_euler/tree/master/p8)


## Erlang version
```erlang
#!/usr/bin/env escript
%% -*- erlang -*-
%%! -smp enable -sname p7
% vim:syn=erlang

-mode(compile).

main(_) ->
    D = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450",
    Answer = f([list_to_integer([C])||C<-D],0),
    io:format("Answer: ~p ~n", [Answer]).



f([A,B,C,D,E,F,G,H,I,J,K,L,M|[]], Max) when A*B*C*D*E*F*G*H*I*J*K*L*M > Max -> A*B*C*D*E*F*G*H*I*J*K*L*M;
f([_,_,_,_,_,_,_,_,_,_,_,_,_|[]], Max) -> Max;
f([A,B,C,D,E,F,G,H,I,J,K,L,M|T],  Max) when A*B*C*D*E*F*G*H*I*J*K*L*M > Max -> f([B,C,D,E,F,G,H,I,J,K,L,M|T], A*B*C*D*E*F*G*H*I*J*K*L*M);
f([_,B,C,D,E,F,G,H,I,J,K,L,M|T],  Max) -> f([B,C,D,E,F,G,H,I,J,K,L,M|T], Max).
```

## Perl version
```perl
#!/usr/bin/perl -w
use strict;


my $d = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

my @d = split "",$d;
my ($mmul, $cmul) = (1,1);
for(my $i=0; $i<$#d-13; $i++){
    for(my $j=$i; $j<$i+13; $j++){
        $cmul *= $d[$j]
    }
    $mmul = $cmul>$mmul?$cmul:$mmul;
    $cmul = 1
}

print "Answer: $mmul \n";

```

## Python version
```python
md = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

d = list(md)
mmul = 1
cmul = 1
for i,val in enumerate(d):
    for j in range(i,i+13):
        if j == len(d): break
        cmul = cmul * int(d[j])
        mmul = cmul if cmul > mmul else mmul
    cmul = 1

print "Answer %d " % mmul
```


<div id="disqus_thread"></div>
<script>
/**
* RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
* LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
*/
/*
var disqus_config = function () {
    this.page.url = '2015/11/24/project-euler-problem-8/'; // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = 'pep8'; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
};
*/
(function() { // DON'T EDIT BELOW THIS LINE
var d = document, s = d.createElement('script');

s.src = '//mijkenator.disqus.com/embed.js';

s.setAttribute('data-timestamp', +new Date());
(d.head || d.body).appendChild(s);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
